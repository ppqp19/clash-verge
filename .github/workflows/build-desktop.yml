name: Build Desktop Release

on:
  push:
    tags:
      - "v*-build-*"
      - "v*-auto"
      - "v*-windows"
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: 'ubuntu-22.04'
            args: '--bundles deb,appimage'
          - platform: 'windows-latest'
            args: '--bundles nsis'
          - platform: 'macos-latest'
            args: '--target x86_64-apple-darwin --bundles dmg'
          - platform: 'macos-latest'
            args: '--target aarch64-apple-darwin --bundles dmg'

    runs-on: ${{ matrix.platform }}
    timeout-minutes: 60
    
    steps:
      - uses: actions/checkout@v4

      - name: setup node
        uses: actions/setup-node@v4
        with:
          node-version: lts/*

      - name: install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-22.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf libssl-dev xdg-utils

      - name: install Rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}

      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: './src-tauri -> target'

      - name: install frontend dependencies
        run: |
          corepack enable
          pnpm install

      - uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tagName: app-v__VERSION__
          releaseName: 'Clash Verge Rev v__VERSION__'
          releaseBody: 'Desktop Release for Windows, macOS, and Linux'
          releaseDraft: false
          prerelease: false
          args: ${{ matrix.args }}
